<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2 | Xiaojie Mao</title>
    <link>https://xiaojiemao.github.io/publication_types/2/</link>
      <atom:link href="https://xiaojiemao.github.io/publication_types/2/index.xml" rel="self" type="application/rss+xml" />
    <description>2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 18 Jan 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://xiaojiemao.github.io/img/icon-192.png</url>
      <title>2</title>
      <link>https://xiaojiemao.github.io/publication_types/2/</link>
    </image>
    
    <item>
      <title>Stochastic Optimization Forests</title>
      <link>https://xiaojiemao.github.io/publication/csoforest/</link>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
      <guid>https://xiaojiemao.github.io/publication/csoforest/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: We study conditional stochastic optimization problems, where we leverage rich auxiliary observations (&lt;em&gt;e.g.&lt;/em&gt;, customer characteristics) to improve decision-making with uncertain variables (&lt;em&gt;e.g.&lt;/em&gt;, demand). We show how to train forest decision policies for this problem by growing trees that choose splits to directly optimize the downstream decision quality, rather than splitting to improve prediction accuracy as in the standard random forest algorithm. We realize this seemingly computationally intractable problem by developing approximate splitting criteria that utilize optimization perturbation analysis to eschew burdensome re-optimization for every candidate split, so that our method scales to large-scale problems. Our method can accommodate both deterministic and stochastic constraints.
We prove that our splitting criteria consistently approximate the true risk.
We extensively validate its efficacy empirically, demonstrating the value of optimization-aware construction of forests and the success of our efficient approximations. We show that our approximate splitting criteria can reduce running time hundredfold, while achieving performance close to forest algorithms that exactly re-optimize for every candidate split.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
